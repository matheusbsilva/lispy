?start : expr

?expr : atom
      | list
      | quote 
      | let_extension
      | if_extension

?number : INT -> number
        | FLOAT -> number

?list : "(" expr* ")" -> lista
      | infix

?infix : "[" expr* "]" -> infix 

?assign : SYMBOL "=" expr -> assign

?let_extension : ":let" "{" assign* "}" "in" list -> let_extension 

?if_extension : ":if" expr "then:" expr elif_extension* ":else:" expr

?elif_extension : ":elif" expr "then:" expr

?bool : TRUE -> boolean
      | FALSE -> boolean

?atom : STRING -> string
      | SYMBOL -> symbol
      | number 
      | bool

?quote :  "'" expr -> quote

?lambda : list expr -> lambda

// Terminais
SYMBOL.0  : /[-!+\/*@$%^&~<>?|\\\w=]+/
STRING    : /"[^"\\]*(\\[^\n\t\r\f][^"\\]*)*"/
INT.1     : /-?\d+/
FLOAT.2   : /-?\d+\.\d+/
TRUE      : "#t"
FALSE     : "#f"

%ignore /\s+/
%ignore /;[^\n]*/
